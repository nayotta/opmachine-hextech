name: build arm inspect slide rest dependencies

on:
  push:
    tags:
      - inspect-*

jobs:
  compile-arm-and-upload-asset:
    strategy:
      matrix:
        distro:
          - ubuntu-20.04
        arch:
          - armv7l
          # - aarch64
        include:
          - distro: ubuntu-20.04
            arch: armv7l
            arm_cpu: cortex-a7
            arm_base_images: raspios_lite:latest
            arm_image_additional_mb: 2048
            python_version: 3.10.7
            repo_project_name: opmachine-hextech
            repo_download_tag: pyenv-v0.2.0-beta.1
          - distro: ubuntu-20.04
            arch: aarch64
            arm_cpu: cortex-a53
            arm_base_images: raspios_lite_arm64:latest
            arm_image_additional_mb: 2048
            python_version: 3.10.7
            repo_project_name: opmachine-hextech
            repo_download_tag: pyenv-v0.2.0-beta.1

    runs-on: ${{ matrix.distro }}

    steps:
      - name: Pull The Repository
        uses: actions/checkout@v3
        with:
          path: ${{ matrix.repo_project_name }}

      - uses: little-core-labs/get-git-tag@v3.0.2
        id: tagName
        with:
          tagRegex: "(.*)"

      - name: Download Pyenv
        uses: robinraju/release-downloader@v1.6
        with:
          tag: ${{ matrix.repo_download_tag}}
          fileName: ${{ matrix.repo_project_name }}_${{ matrix.repo_download_tag}}_linux_${{ matrix.arch}}.tar.gz
          # tarBall: true

      - name: Prepare
        env:
          PYENV_TAR: ${{ matrix.repo_project_name }}_${{ matrix.repo_download_tag}}_linux_${{ matrix.arch}}.tar.gz
        run: |
          sudo apt update
          sudo apt install tree -y
          mkdir -p dist
          mkdir -p downloads
          mv ${PYENV_TAR} downloads/
          pwd
          tree -L 2 .

      - name: Build Arm
        uses: pguyot/arm-runner-action@v2
        env:
          PYENV_TAR: ${{ matrix.repo_project_name }}_${{ matrix.repo_download_tag}}_linux_${{ matrix.arch}}.tar.gz
          PROJECT_NAME: ${{ matrix.repo_project_name }}/inspect-slide-rest
          PYTHON_VERSION: ${{ matrix.python_version}}
        with:
          image_additional_mb: ${{ matrix.arm_image_additional_mb}}
          base_image: ${{ matrix.arm_base_images}}
          cpu: ${{ matrix.arm_cpu}}
          shell: /bin/bash -eo pipefail
          copy_artifact_path: opt/venv
          copy_artifact_dest: dist/venv
          commands: |
            # prepare
            mkdir -p ${HOME}
            mkdir -p ${PWD}/opt
            export ARTIFACT_OPT="${PWD}/opt"

            # install dependencies to build python, lxml, etc..
            apt-get update
            apt-get install tree -y
            apt-get install git curl \
              build-essential zlib1g-dev libffi-dev libssl-dev \
              libbz2-dev libreadline-dev libsqlite3-dev liblzma-dev \
              libxml2-dev libxmlsec1-dev libxslt-dev -y

            # install pyenv
            (cd downloads; tar -zxf ${PYENV_TAR})
            tree -L 2 .
            tree -L 2 $HOME/
            mv downloads/pyenv $HOME/.pyenv

            # set env
            export PYENV_ROOT="$HOME/.pyenv"
            command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
            eval "$(pyenv init -)"
            eval "$(pyenv virtualenv-init -)"

            # debug
            tree -L 2 .
            echo ${PYTHON_VERSION}
            echo ${PYENV_ROOT}
            echo ${ARTIFACT_OPT}
            echo $PATH
            pyenv versions

            # install python dependencies
            (pyenv shell ${PYTHON_VERSION}; python3 -m venv venv)
            . venv/bin/activate
            pyenv which python
            (cd ${PROJECT_NAME}; pip install -r requirements.txt)
            (cd venv; rm -rf bin include)

            # move dependencies
            mv venv opt/venv

      - name: Check Artifact
        env:
          PROJECT_PACKAGE: ${{ matrix.repo_project_name}}
          RUN_OS: linux
          RUN_ARCH: ${{ matrix.arch }}
        run: |
          pwd
          tree -L 2 .
          TAR_NAME="${PROJECT_PACKAGE}_${GIT_TAG_NAME}_${RUN_OS}_${RUN_ARCH}.tar.gz"
          (cd dist; tar zcvf ../${TAR_NAME} venv)
          sha1sum ${TAR_NAME} > ${TAR_NAME}.sha1
          tree -L 2 .

      - name: Upload Artifact Asset
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.tar.gz
            *.sha1