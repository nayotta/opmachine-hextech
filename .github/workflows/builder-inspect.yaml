name: build arm inspect slide rest dependencies

on:
  push:
    tags:
      - inspect-*

jobs:
  compile-arm-and-upload-asset:
    strategy:
      matrix:
        include:
          - distro: ubuntu-20.04
            arm_vm_runner:
              arch: armv7l
              cpu: cortex-a7
              base_images: https://downloads.raspberrypi.org/raspios_oldstable_lite_armhf/images/raspios_oldstable_lite_armhf-2022-09-26/2022-09-22-raspios-buster-armhf-lite.img.xz
              image_additional_mb: 2048
              distro: debian
              distro_codename: buster
            python_version: 3.10.7
            repo_project_name: opmachine-hextech
            repo_download_tag: pyenv-v0.3.0-beta.1
            repo_download_pkg_name: pyenv_cp-3.10.7

          - distro: ubuntu-20.04
            arm_vm_runner:
              arch: armv7l
              cpu: cortex-a7
              base_images: raspios_lite:latest
              image_additional_mb: 2048
              distro: debian
              distro_codename: bullseye
            python_version: 3.10.7
            repo_project_name: opmachine-hextech
            repo_download_tag: pyenv-v0.3.0-beta.1
            repo_download_pkg_name: pyenv_cp-3.10.7

          - distro: ubuntu-20.04
            arm_vm_runner:
              arch: aarch64
              cpu: cortex-a53
              base_images: raspios_lite_arm64:latest
              image_additional_mb: 2048
              distro: debian
              distro_codename: bullseye
            python_version: 3.10.7
            repo_project_name: opmachine-hextech
            repo_download_tag: pyenv-v0.3.0-beta.1
            repo_download_pkg_name: pyenv_cp-3.10.7

    runs-on: ${{ matrix.distro }}

    steps:
      - name: Pull The Repository
        uses: actions/checkout@v3
        with:
          path: ${{ matrix.repo_project_name }}

      - uses: little-core-labs/get-git-tag@v3.0.2
        id: tagName
        with:
          tagRegex: "(.*)"

      - name: Download Pyenv
        uses: robinraju/release-downloader@v1.6
        with:
          tag: ${{ matrix.repo_download_tag }}
          fileName: ${{ matrix.repo_project_name }}_${{ matrix.repo_download_pkg_name }}_${{ matrix.arm_vm_runner.distro_codename }}_${{ matrix.arm_vm_runner.arch }}.tar.gz

      - name: Prepare
        env:
          PYENV_TAR: ${{ matrix.repo_project_name }}_${{ matrix.repo_download_pkg_name }}_${{ matrix.arm_vm_runner.distro_codename }}_${{ matrix.arm_vm_runner.arch }}.tar.gz
        run: |
          sudo apt update
          sudo apt install tree -y
          mkdir -p dist
          mkdir -p downloads
          mv ${PYENV_TAR} downloads/
          pwd
          tree -L 2 .

      - name: Build Arm
        uses: pguyot/arm-runner-action@v2
        env:
          PYENV_TAR: ${{ matrix.repo_project_name }}_${{ matrix.repo_download_pkg_name }}_${{ matrix.arm_vm_runner.distro_codename }}_${{ matrix.arm_vm_runner.arch }}.tar.gz
          PROJECT_NAME: ${{ matrix.repo_project_name }}/inspect-slide-rest
          PYTHON_VERSION: ${{ matrix.python_version }}
        with:
          image_additional_mb: ${{ matrix.arm_vm_runner.image_additional_mb }}
          base_image: ${{ matrix.arm_vm_runner.base_images}}
          cpu: ${{ matrix.arm_vm_runner.cpu}}
          shell: /bin/bash -eo pipefail
          copy_artifact_path: opt/venv
          copy_artifact_dest: dist/venv
          commands: |
            # prepare
            mkdir -p ${HOME}
            mkdir -p ${PWD}/opt
            export ARTIFACT_OPT="${PWD}/opt"

            # install dependencies to build python, lxml, etc..
            apt-get update
            apt-get install tree -y
            apt-get install git curl \
              build-essential zlib1g-dev libffi-dev libssl-dev \
              libbz2-dev libreadline-dev libsqlite3-dev liblzma-dev \
              libxml2-dev libxmlsec1-dev libxslt-dev -y

            # install pyenv
            (cd downloads; tar -zxf ${PYENV_TAR})
            tree -L 2 .
            tree -L 2 $HOME/
            mv downloads/pyenv $HOME/.pyenv

            # set env
            export PYENV_ROOT="$HOME/.pyenv"
            command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
            eval "$(pyenv init -)"
            eval "$(pyenv virtualenv-init -)"

            # debug
            tree -L 2 .
            echo ${PYTHON_VERSION}
            echo ${PYENV_ROOT}
            echo ${ARTIFACT_OPT}
            echo $PATH
            pyenv versions

            # install python dependencies
            (pyenv shell ${PYTHON_VERSION}; python3 -m venv venv)
            . venv/bin/activate
            pyenv which python
            (cd ${PROJECT_NAME}; pip install -r requirements.txt)
            # remove init package
            pip uninstall setuptools pip -y
            deactivate
            (cd venv; rm -rf bin include)

            # move dependencies
            mv venv opt/venv

      - name: Check Artifact
        env:
          PROJECT_PACKAGE: ${{ matrix.repo_project_name }}
          RUN_PKG_NAME: inspect-dev-cp-${{ matrix.python_version }}
          RUN_OS: ${{ matrix.arm_vm_runner.distro_codename }}
          RUN_ARCH: ${{ matrix.arm_vm_runner.arch }}
        run: |
          pwd
          tree -L 2 .
          TAR_NAME="${PROJECT_PACKAGE}_${RUN_PKG_NAME}_${RUN_OS}_${RUN_ARCH}.tar.gz"
          (cd dist; tar zcvf ../${TAR_NAME} venv)
          sha1sum ${TAR_NAME} > ${TAR_NAME}.sha1
          tree -L 2 .

      - name: Upload Artifact Asset
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.tar.gz
            *.sha1