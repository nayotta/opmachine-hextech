name: build arm pyenv with python

on:
  push:
    tags:
      - pyenv-*

jobs:
  compile-arm-and-upload-asset:
    strategy:
      matrix:
        distro:
          - ubuntu-20.04
        include:
          - arm_cpu: cortex-a7
            arm_base_images: raspios_lite:latest
            python_version: 3.10.7
            repo_project_name: opmachine-hextech

    runs-on: ${{ matrix.distro }}

    steps:
      - name: Pull The Repository
        uses: actions/checkout@v3
        with:
          path: ${{ matrix.repo_project_name }}

      - uses: little-core-labs/get-git-tag@v3.0.1
        id: tagName
        with:
          tagRegex: "v(.*)"

      # - name: Free Disk
      #   env:
      #     FREE_DISK_SCRIPT: https://raw.githubusercontent.com/apache/flink/master/tools/azure-pipelines/free_disk_space.sh
      #   run: |
      #     curl ${FREE_DISK_SCRIPT} | bash

      - name: Prepare
        run: |
          sudo apt update
          sudo apt install tree -y
          mkdir -p dist
          pwd
          tree -L 2 .

      - name: Build Arm
        uses: pguyot/arm-runner-action@v2
        env:
          LOCAL_ENV: /etc/bash.bashrc
          PROJECT_NAME: ${{ matrix.repo_project_name }}/pyenv
          PYTHON_VERSION: ${{ matrix.python_version}}
        with:
          image_additional_mb: 1024
          base_image: ${{ matrix.arm_base_images}}
          cpu: ${{ matrix.arm_cpu}}
          shell: /bin/bash -eo pipefail
          copy_artifact_path: opt
          copy_artifact_dest: dist/opt
          commands: |

            ${PROJECT_NAME}/prepare.sh

            ${PROJECT_NAME}/setup-pyenv.sh

            ${PROJECT_NAME}/install-python.sh

            ${PROJECT_NAME}/done.sh

            # ls -la /home
            # echo ${HOME}
            # export LOCAL_ENV=${HOME}/${LOCAL_ENV}
            # echo ${LOCAL_ENV}
            # touch ${LOCAL_ENV}
            # ls -la

            # echo "1:start"
            # ${PROJECT_NAME}/prepare.sh
            # echo "1:done" ${ARTIFACT_OPT}
            # # . ${LOCAL_ENV}
            # echo "1:end1" ${PATH}
            # echo "1:end2" ${ARTIFACT_OPT}

            # echo "2:start"
            # cat ${PROJECT_NAME}/setup-pyenv.sh
            # ${PROJECT_NAME}/setup-pyenv.sh
            # ls -la
            # cat ${LOCAL_ENV}
            # ${PROJECT_NAME}/done.sh
            # . ${LOCAL_ENV}
            # echo "2:done1" $PATH
            # echo "2:done2" ${ARTIFACT_OPT}
            # pyenv --help
            # echo "2: end"

            # ${PROJECT_NAME}/install-python.sh
            # echo "3:" ${ARTIFACT_OPT}
            # ${PROJECT_NAME}/done.sh

      - name: Check Artifact
        env:
          PROJECT_PACKAGE: openmachine-hextech
          RUN_OS: linux
          RUN_ARCH: armhf
        run: |
          pwd
          tree -L 2 .
          TAR_NAME="${PROJECT_PACKAGE}_${GIT_TAG_NAME}_${RUN_OS}_${RUN_ARCH}.tar.gz"
          (cd dist; tar zcvf ../${TAR_NAME} opt)
          sha1sum ${TAR_NAME} > ${TAR_NAME}.sha1
          tree -L 2 .

      - name: Upload Artifact Asset
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.tar.gz
            *.sha1